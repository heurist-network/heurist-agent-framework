name: Build and Deploy Mesh

on:
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/mesh:latest
            ghcr.io/${{ github.repository }}/mesh:${{ github.sha }}
          build-args: |
            GITHUB_SHA=${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Trigger deployment webhook
        uses: distributhor/workflow-webhook@v3
        with:
          webhook_url: ${{ secrets.DEPLOY_WEBHOOK_URL }}
          webhook_secret: ${{ secrets.DEPLOY_WEBHOOK_SECRET }}
          data: '{"repository": "${{ github.repository }}", "ref": "${{ github.ref }}", "sha": "${{ github.sha }}", "commits": ${{ toJson(github.event.commits) }}}'

      - name: Wait for deployment
        run: |
          echo "Waiting up to 4 minutes (initial 45s + 45 attempts * 5s) for deployment..."
          sleep 45 # initial wait for docker swarm to update

          for i in {1..45}; do
            echo "Checking deployment status... (attempt $i/45)"
            response=$(curl --fail -s --max-time 5 https://sequencer-v2.heurist.xyz/mesh_health || echo "error")

            if [[ "$response" != "error" ]]; then
              commit=$(echo "$response" | jq -r '.commit' 2>/dev/null || echo "")
              echo "Current deployed commit: $commit"
              if [[ -n "$commit" && "$commit" = "${{ github.sha }}" ]]; then
                echo "Deployment successful!"
                exit 0
              fi
            else
              echo "Health check endpoint not ready or returned error."
            fi

            sleep 5
          done

          echo "Deployment timed out or failed verification after multiple attempts."
          exit 1
